# Generated by Django 3.2.16 on 2023-01-14 00:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('name', models.CharField(help_text='项目名称', max_length=64, verbose_name='项目名称')),
                ('owner', models.CharField(help_text='负责人', max_length=150, verbose_name='负责人')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '未开始'), (1, '进行中'), (2, '已完成')], default=0, help_text='项目状态', verbose_name='项目状态')),
                ('members', models.ManyToManyField(blank=True, help_text='项目成员', to=settings.AUTH_USER_MODEL, verbose_name='项目成员')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'db_table': 'pm_project',
            },
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('name', models.CharField(help_text='迭代名称', max_length=64, verbose_name='迭代名称')),
                ('owner', models.CharField(help_text='负责人', max_length=150, verbose_name='负责人')),
                ('start_time', models.DateTimeField(blank=True, help_text='开始时间', null=True, verbose_name='开始时间')),
                ('finish_time', models.DateTimeField(blank=True, help_text='完成时间', null=True, verbose_name='完成时间')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '未开始'), (1, '进行中'), (2, '已完成')], default=0, help_text='迭代状态', verbose_name='迭代状态')),
                ('project', models.ForeignKey(blank=True, help_text='所属项目', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '迭代',
                'verbose_name_plural': '迭代',
                'db_table': 'pm_sprint',
            },
        ),
        migrations.CreateModel(
            name='WorkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('name', models.CharField(help_text='工作项名称', max_length=64, verbose_name='工作项名称')),
                ('owner', models.CharField(help_text='负责人', max_length=150, verbose_name='负责人')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, '需求'), (1, '任务'), (2, '缺陷')], help_text='工作项类型', verbose_name='工作项类型')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, '最低'), (1, '较低'), (2, '普通'), (3, '较高'), (4, '最高')], help_text='优先级', verbose_name='优先级')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '未开始'), (1, '待处理'), (2, '重新打开'), (3, '进行中'), (4, '实现中'), (5, '已完成'), (6, '修复中'), (7, '已实现'), (8, '关闭'), (9, '已修复'), (10, '已验证'), (11, '已拒绝')], default=0, help_text='状态', verbose_name='状态')),
                ('severity', models.PositiveSmallIntegerField(blank=True, choices=[(0, '保留'), (1, '建议'), (2, '提示'), (3, '一般'), (4, '严重'), (5, '致命')], help_text='缺陷严重程度', null=True, verbose_name='缺陷严重程度')),
                ('bug_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, '功能问题'), (1, '性能问题'), (2, '接口问题'), (3, '安全问题'), (4, 'UI界面问题'), (5, '易用性问题'), (6, '兼容问题'), (7, '数据问题'), (8, '逻辑问题'), (9, '需求问题')], help_text='缺陷类型', null=True, verbose_name='缺陷类型')),
                ('process_result', models.PositiveSmallIntegerField(blank=True, choices=[(0, '不予处理'), (1, '延期处理'), (2, '外部原因'), (3, '需求变更'), (4, '转需求'), (5, '挂起'), (6, '设计如此'), (7, '重复缺陷'), (8, '无法重现')], help_text='缺陷处理结果', null=True, verbose_name='缺陷处理结果')),
                ('desc', models.TextField(blank=True, default='', help_text='描述', verbose_name='描述')),
                ('deadline', models.DateTimeField(blank=True, help_text='截止日期', null=True, verbose_name='截止日期')),
                ('followers', models.ManyToManyField(blank=True, help_text='关注人', to=settings.AUTH_USER_MODEL, verbose_name='关注人')),
                ('parent', models.ForeignKey(blank=True, help_text='父工作项', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.workitem', verbose_name='父工作项')),
                ('sprint', models.ForeignKey(blank=True, help_text='所属迭代', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.sprint', verbose_name='所属迭代')),
            ],
            options={
                'verbose_name': '工作项',
                'verbose_name_plural': '工作项',
                'db_table': 'pm_work_item',
            },
        ),
        migrations.CreateModel(
            name='UserFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('file', models.FileField(help_text='用户上传的静态文件', upload_to='user_upload_files/', verbose_name='用户上传的静态文件')),
                ('work_item', models.ForeignKey(blank=True, help_text='所属工作项', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.workitem', verbose_name='所属工作项')),
            ],
            options={
                'verbose_name': '静态文件',
                'verbose_name_plural': '静态文件',
                'db_table': 'pm_file',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('content', models.TextField(help_text='评论内容', verbose_name='评论内容')),
                ('parent', models.ForeignKey(blank=True, help_text='父评论', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.comment', verbose_name='父评论')),
                ('work_item', models.ForeignKey(blank=True, help_text='所属工作项', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.workitem', verbose_name='所属工作项')),
            ],
            options={
                'verbose_name': '用户评论',
                'verbose_name_plural': '用户评论',
                'db_table': 'pm_comment',
            },
        ),
        migrations.CreateModel(
            name='Changelog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
                ('creator', models.CharField(help_text='创建人', max_length=150, verbose_name='创建人')),
                ('modifier', models.CharField(help_text='最后修改人', max_length=150, verbose_name='最后修改人')),
                ('changelog', models.TextField(help_text='变更记录内容', verbose_name='变更记录内容')),
                ('work_item', models.ForeignKey(blank=True, help_text='所属工作项', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.workitem', verbose_name='所属工作项')),
            ],
            options={
                'verbose_name': '变更记录',
                'verbose_name_plural': '变更记录',
                'db_table': 'pm_changelog',
            },
        ),
    ]
